package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class BillPayment implements KvmSerializable {

    public int idBillPayment;
    public int idBill;
    public int idPayingCustomer;
    public int idIssuingCustomer;
    public String datePaid;
    public int paidAmount;
    public Bill bill;
    public Customer customer;
    public Customer customer1;

    public BillPayment() {
    }

    public BillPayment(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdBillPayment")) {
            Object obj = soapObject.getProperty("IdBillPayment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idBillPayment = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idBillPayment = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdBill")) {
            Object obj = soapObject.getProperty("IdBill");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idBill = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idBill = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdPayingCustomer")) {
            Object obj = soapObject.getProperty("IdPayingCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idPayingCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idPayingCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdIssuingCustomer")) {
            Object obj = soapObject.getProperty("IdIssuingCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idIssuingCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idIssuingCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DatePaid")) {
            Object obj = soapObject.getProperty("DatePaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                datePaid = j.toString();
            } else if (obj != null && obj instanceof String) {
                datePaid = (String) obj;
            }
        }
        if (soapObject.hasProperty("PaidAmount")) {
            Object obj = soapObject.getProperty("PaidAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                paidAmount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                paidAmount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Bill")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Bill");
            bill = new Bill(j);

        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
        if (soapObject.hasProperty("Customer1")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer1");
            customer1 = new Customer(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idBillPayment;
            case 1:
                return idBill;
            case 2:
                return idPayingCustomer;
            case 3:
                return idIssuingCustomer;
            case 4:
                return datePaid;
            case 5:
                return paidAmount;
            case 6:
                return bill;
            case 7:
                return customer;
            case 8:
                return customer1;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdBillPayment";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdBill";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdPayingCustomer";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdIssuingCustomer";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DatePaid";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PaidAmount";
                break;
            case 6:
                info.type = Bill.class;
                info.name = "Bill";
                break;
            case 7:
                info.type = Customer.class;
                info.name = "Customer";
                break;
            case 8:
                info.type = Customer.class;
                info.name = "Customer1";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
