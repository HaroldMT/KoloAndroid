package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class TransfertE2e implements KvmSerializable {

    public int idTransfertE2e;
    public int idCustomer;
    public int idSendingExternalAccount;
    public int idReceiverExternalAccount;
    public String transfertStatusCode;
    public int amount;
    public String operationTypeCode;
    public String reference;
    public Customer customer;
    public ExternalAccount externalAccount;
    public ExternalAccount externalAccount1;
    public RefOperationType refOperationType;
    public RefTransfertStatu refTransfertStatu;

    public TransfertE2e() {
    }

    public TransfertE2e(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdTransfertE2e")) {
            Object obj = soapObject.getProperty("IdTransfertE2e");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idTransfertE2e = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idTransfertE2e = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCustomer")) {
            Object obj = soapObject.getProperty("IdCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSendingExternalAccount")) {
            Object obj = soapObject.getProperty("IdSendingExternalAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idSendingExternalAccount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idSendingExternalAccount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdReceiverExternalAccount")) {
            Object obj = soapObject.getProperty("IdReceiverExternalAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idReceiverExternalAccount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idReceiverExternalAccount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TransfertStatusCode")) {
            Object obj = soapObject.getProperty("TransfertStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transfertStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                transfertStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OperationTypeCode")) {
            Object obj = soapObject.getProperty("OperationTypeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                operationTypeCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                operationTypeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Reference")) {
            Object obj = soapObject.getProperty("Reference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reference = j.toString();
            } else if (obj != null && obj instanceof String) {
                reference = (String) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
        if (soapObject.hasProperty("ExternalAccount")) {
            SoapObject j = (SoapObject) soapObject.getProperty("ExternalAccount");
            externalAccount = new ExternalAccount(j);

        }
        if (soapObject.hasProperty("ExternalAccount1")) {
            SoapObject j = (SoapObject) soapObject.getProperty("ExternalAccount1");
            externalAccount1 = new ExternalAccount(j);

        }
        if (soapObject.hasProperty("RefOperationType")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefOperationType");
            refOperationType = new RefOperationType(j);

        }
        if (soapObject.hasProperty("RefTransfertStatu")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefTransfertStatu");
            refTransfertStatu = new RefTransfertStatu(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idTransfertE2e;
            case 1:
                return idCustomer;
            case 2:
                return idSendingExternalAccount;
            case 3:
                return idReceiverExternalAccount;
            case 4:
                return transfertStatusCode;
            case 5:
                return amount;
            case 6:
                return operationTypeCode;
            case 7:
                return reference;
            case 8:
                return customer;
            case 9:
                return externalAccount;
            case 10:
                return externalAccount1;
            case 11:
                return refOperationType;
            case 12:
                return refTransfertStatu;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 13;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdTransfertE2e";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomer";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdSendingExternalAccount";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdReceiverExternalAccount";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TransfertStatusCode";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Amount";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationTypeCode";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Reference";
                break;
            case 8:
                info.type = Customer.class;
                info.name = "Customer";
                break;
            case 9:
                info.type = ExternalAccount.class;
                info.name = "ExternalAccount";
                break;
            case 10:
                info.type = ExternalAccount.class;
                info.name = "ExternalAccount1";
                break;
            case 11:
                info.type = RefOperationType.class;
                info.name = "RefOperationType";
                break;
            case 12:
                info.type = RefTransfertStatu.class;
                info.name = "RefTransfertStatu";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
