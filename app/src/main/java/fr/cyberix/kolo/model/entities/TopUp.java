package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/19/2018 5:56:59 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class TopUp implements KvmSerializable {
	
	public int idTopUp;
	public String opDate;
	public String phoneNumber;
	public String amount;
	public String operatorCode;
	public int ccion;
	public int idCustomer;
	public Customer customer;
	
	public TopUp() {
	}
	
	public TopUp(SoapObject soapObject) {
		if (soapObject == null)
			return;
		if (soapObject.hasProperty("IdTopUp")) {
			Object obj = soapObject.getProperty("IdTopUp");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				idTopUp = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				idTopUp = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("OpDate")) {
			Object obj = soapObject.getProperty("OpDate");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				opDate = j.toString();
			} else if (obj != null && obj instanceof String) {
				opDate = (String) obj;
			}
		}
		if (soapObject.hasProperty("PhoneNumber")) {
			Object obj = soapObject.getProperty("PhoneNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				phoneNumber = j.toString();
			} else if (obj != null && obj instanceof String) {
				phoneNumber = (String) obj;
			}
		}
		if (soapObject.hasProperty("Amount")) {
			Object obj = soapObject.getProperty("Amount");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				amount = j.toString();
			} else if (obj != null && obj instanceof String) {
				amount = (String) obj;
			}
		}
		if (soapObject.hasProperty("OperatorCode")) {
			Object obj = soapObject.getProperty("OperatorCode");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				operatorCode = j.toString();
			} else if (obj != null && obj instanceof String) {
				operatorCode = (String) obj;
			}
		}
		if (soapObject.hasProperty("Ccion")) {
			Object obj = soapObject.getProperty("Ccion");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				ccion = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				ccion = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("IdCustomer")) {
			Object obj = soapObject.getProperty("IdCustomer");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				idCustomer = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				idCustomer = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("Customer")) {
			SoapObject j = (SoapObject) soapObject.getProperty("Customer");
			customer = new Customer(j);
			
		}
	}
	
	@Override
	public Object getProperty(int arg0) {
		switch (arg0) {
			case 0:
				return idTopUp;
			case 1:
				return opDate;
			case 2:
				return phoneNumber;
			case 3:
				return amount;
			case 4:
				return operatorCode;
			case 5:
				return ccion;
			case 6:
				return idCustomer;
			case 7:
				return customer;
		}
		return null;
	}
	
	@Override
	public int getPropertyCount() {
		return 8;
	}
	
	@Override
	public void setProperty(int arg0, Object arg1) {
	}
	
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		switch (index) {
			case 0:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "IdTopUp";
				break;
			case 1:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "OpDate";
				break;
			case 2:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "PhoneNumber";
				break;
			case 3:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "Amount";
				break;
			case 4:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "OperatorCode";
				break;
			case 5:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "Ccion";
				break;
			case 6:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "IdCustomer";
				break;
			case 7:
				info.type = Customer.class;
				info.name = "Customer";
				break;
		}
	}
	
	//    @Override
	public String getInnerText() {
		return null;
	}
	
	//    @Override
	public void setInnerText(String s) {
	}
	
}
