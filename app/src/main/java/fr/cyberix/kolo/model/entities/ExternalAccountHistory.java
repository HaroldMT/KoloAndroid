package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ExternalAccountHistory implements KvmSerializable {

    private int idAccountHistory;
    private int idExternalAccount;
    private String operationTypeCode;
    private String historyDate;
    private int oldBalance;
    private int newBalance;
    private int amount;
    private ExternalAccount externalAccount;

    public ExternalAccountHistory() {
    }

    public ExternalAccountHistory(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdAccountHistory")) {
            Object obj = soapObject.getProperty("IdAccountHistory");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setIdAccountHistory(Integer.parseInt(j.toString()));
            } else if (obj != null && obj instanceof Number) {
                setIdAccountHistory((Integer) obj);
            }
        }
        if (soapObject.hasProperty("IdExternalAccount")) {
            Object obj = soapObject.getProperty("IdExternalAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setIdExternalAccount(Integer.parseInt(j.toString()));
            } else if (obj != null && obj instanceof Number) {
                setIdExternalAccount((Integer) obj);
            }
        }
        if (soapObject.hasProperty("OperationTypeCode")) {
            Object obj = soapObject.getProperty("OperationTypeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setOperationTypeCode(j.toString());
            } else if (obj != null && obj instanceof String) {
                setOperationTypeCode((String) obj);
            }
        }
        if (soapObject.hasProperty("HistoryDate")) {
            Object obj = soapObject.getProperty("HistoryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setHistoryDate(j.toString());
            } else if (obj != null && obj instanceof String) {
                setHistoryDate((String) obj);
            }
        }
        if (soapObject.hasProperty("OldBalance")) {
            Object obj = soapObject.getProperty("OldBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setOldBalance(Integer.parseInt(j.toString()));
            } else if (obj != null && obj instanceof Number) {
                setOldBalance((Integer) obj);
            }
        }
        if (soapObject.hasProperty("NewBalance")) {
            Object obj = soapObject.getProperty("NewBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setNewBalance(Integer.parseInt(j.toString()));
            } else if (obj != null && obj instanceof Number) {
                setNewBalance((Integer) obj);
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                setAmount(Integer.parseInt(j.toString()));
            } else if (obj != null && obj instanceof Number) {
                setAmount((Integer) obj);
            }
        }
        if (soapObject.hasProperty("ExternalAccount")) {
            SoapObject j = (SoapObject) soapObject.getProperty("ExternalAccount");
            setExternalAccount(new ExternalAccount(j));

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return getIdAccountHistory();
            case 1:
                return getIdExternalAccount();
            case 2:
                return getOperationTypeCode();
            case 3:
                return getHistoryDate();
            case 4:
                return getOldBalance();
            case 5:
                return getNewBalance();
            case 6:
                return getAmount();
            case 7:
                return getExternalAccount();
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 8;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdAccountHistory";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdExternalAccount";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationTypeCode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "HistoryDate";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OldBalance";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NewBalance";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Amount";
                break;
            case 7:
                info.type = ExternalAccount.class;
                info.name = "ExternalAccount";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

    public int getIdAccountHistory() {
        return idAccountHistory;
    }

    public void setIdAccountHistory(int idAccountHistory) {
        this.idAccountHistory = idAccountHistory;
    }

    public int getIdExternalAccount() {
        return idExternalAccount;
    }

    public void setIdExternalAccount(int idExternalAccount) {
        this.idExternalAccount = idExternalAccount;
    }

    public String getOperationTypeCode() {
        return operationTypeCode;
    }

    public void setOperationTypeCode(String operationTypeCode) {
        this.operationTypeCode = operationTypeCode;
    }

    public String getHistoryDate() {
        return historyDate;
    }

    public void setHistoryDate(String historyDate) {
        this.historyDate = historyDate;
    }

    public int getOldBalance() {
        return oldBalance;
    }

    public void setOldBalance(int oldBalance) {
        this.oldBalance = oldBalance;
    }

    public int getNewBalance() {
        return newBalance;
    }

    public void setNewBalance(int newBalance) {
        this.newBalance = newBalance;
    }

    public int getAmount() {
        return amount;
    }

    public void setAmount(int amount) {
        this.amount = amount;
    }

    public ExternalAccount getExternalAccount() {
        return externalAccount;
    }

    public void setExternalAccount(ExternalAccount externalAccount) {
        this.externalAccount = externalAccount;
    }
}
