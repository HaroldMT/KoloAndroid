package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/19/2018 5:56:59 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class EneoBillPayment implements KvmSerializable {
	
	public int idEneoBillPayment;
	public int idCustomer;
	public String paymentDate;
	public String contractNo;
	public String billNumber;
	public int fee;
	public int ccion;
	public int billAmount;
	public Customer customer;
	
	public EneoBillPayment() {
	}
	
	public EneoBillPayment(SoapObject soapObject) {
		if (soapObject == null)
			return;
		if (soapObject.hasProperty("IdEneoBillPayment")) {
			Object obj = soapObject.getProperty("IdEneoBillPayment");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				idEneoBillPayment = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				idEneoBillPayment = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("IdCustomer")) {
			Object obj = soapObject.getProperty("IdCustomer");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				idCustomer = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				idCustomer = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("PaymentDate")) {
			Object obj = soapObject.getProperty("PaymentDate");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				paymentDate = j.toString();
			} else if (obj != null && obj instanceof String) {
				paymentDate = (String) obj;
			}
		}
		if (soapObject.hasProperty("ContractNo")) {
			Object obj = soapObject.getProperty("ContractNo");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				contractNo = j.toString();
			} else if (obj != null && obj instanceof String) {
				contractNo = (String) obj;
			}
		}
		if (soapObject.hasProperty("BillNumber")) {
			Object obj = soapObject.getProperty("BillNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				billNumber = j.toString();
			} else if (obj != null && obj instanceof String) {
				billNumber = (String) obj;
			}
		}
		if (soapObject.hasProperty("Fee")) {
			Object obj = soapObject.getProperty("Fee");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				fee = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				fee = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("Ccion")) {
			Object obj = soapObject.getProperty("Ccion");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				ccion = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				ccion = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("BillAmount")) {
			Object obj = soapObject.getProperty("BillAmount");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
				SoapPrimitive j = (SoapPrimitive) obj;
				billAmount = Integer.parseInt(j.toString());
			} else if (obj != null && obj instanceof Number) {
				billAmount = (Integer) obj;
			}
		}
		if (soapObject.hasProperty("Customer")) {
			SoapObject j = (SoapObject) soapObject.getProperty("Customer");
			customer = new Customer(j);
			
		}
	}
	
	@Override
	public Object getProperty(int arg0) {
		switch (arg0) {
			case 0:
				return idEneoBillPayment;
			case 1:
				return idCustomer;
			case 2:
				return paymentDate;
			case 3:
				return contractNo;
			case 4:
				return billNumber;
			case 5:
				return fee;
			case 6:
				return ccion;
			case 7:
				return billAmount;
			case 8:
				return customer;
		}
		return null;
	}
	
	@Override
	public int getPropertyCount() {
		return 9;
	}
	
	@Override
	public void setProperty(int arg0, Object arg1) {
	}
	
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		switch (index) {
			case 0:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "IdEneoBillPayment";
				break;
			case 1:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "IdCustomer";
				break;
			case 2:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "PaymentDate";
				break;
			case 3:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "ContractNo";
				break;
			case 4:
				info.type = PropertyInfo.STRING_CLASS;
				info.name = "BillNumber";
				break;
			case 5:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "Fee";
				break;
			case 6:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "Ccion";
				break;
			case 7:
				info.type = PropertyInfo.INTEGER_CLASS;
				info.name = "BillAmount";
				break;
			case 8:
				info.type = Customer.class;
				info.name = "Customer";
				break;
		}
	}
	
	//    @Override
	public String getInnerText() {
		return null;
	}
	
	//    @Override
	public void setInnerText(String s) {
	}
	
}
