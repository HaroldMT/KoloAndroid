package fr.cyberix.kolo.model.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class TransfertP2p implements KvmSerializable {

    public int idTransfertP2p;
    public int idSendingCustomer;
    public int idReceiverCustomer;
    public int idTransfertScheduled;
    public String transfertStatusCode;
    public int amount;
    public boolean needsConfirmation;
    public String secret;
    public String transfertDate;
    public String reference;
    public boolean transfert2Cash;
    public Customer customer;

    public TransfertP2p() {
    }

    public TransfertP2p(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdTransfertP2p")) {
            Object obj = soapObject.getProperty("IdTransfertP2p");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idTransfertP2p = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idTransfertP2p = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdSendingCustomer")) {
            Object obj = soapObject.getProperty("IdSendingCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idSendingCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idSendingCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdReceiverCustomer")) {
            Object obj = soapObject.getProperty("IdReceiverCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idReceiverCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idReceiverCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdTransfertScheduled")) {
            Object obj = soapObject.getProperty("IdTransfertScheduled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idTransfertScheduled = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idTransfertScheduled = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TransfertStatusCode")) {
            Object obj = soapObject.getProperty("TransfertStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transfertStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                transfertStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NeedsConfirmation")) {
            Object obj = soapObject.getProperty("NeedsConfirmation");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                needsConfirmation = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                needsConfirmation = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Secret")) {
            Object obj = soapObject.getProperty("Secret");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                secret = j.toString();
            } else if (obj != null && obj instanceof String) {
                secret = (String) obj;
            }
        }
        if (soapObject.hasProperty("TransfertDate")) {
            Object obj = soapObject.getProperty("TransfertDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transfertDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                transfertDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("Reference")) {
            Object obj = soapObject.getProperty("Reference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reference = j.toString();
            } else if (obj != null && obj instanceof String) {
                reference = (String) obj;
            }
        }
        if (soapObject.hasProperty("Transfert2Cash")) {
            Object obj = soapObject.getProperty("Transfert2Cash");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transfert2Cash = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                transfert2Cash = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idTransfertP2p;
            case 1:
                return idSendingCustomer;
            case 2:
                return idReceiverCustomer;
            case 3:
                return idTransfertScheduled;
            case 4:
                return transfertStatusCode;
            case 5:
                return amount;
            case 6:
                return needsConfirmation;
            case 7:
                return secret;
            case 8:
                return transfertDate;
            case 9:
                return reference;
            case 10:
                return transfert2Cash;
            case 11:
                return customer;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 12;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdTransfertP2p";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdSendingCustomer";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdReceiverCustomer";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdTransfertScheduled";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TransfertStatusCode";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Amount";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NeedsConfirmation";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Secret";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TransfertDate";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Reference";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Transfert2Cash";
                break;
            case 11:
                info.type = Customer.class;
                info.name = "Customer";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
