package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class Registration implements KvmSerializable {

    public int idRegistration;
    public String lastName;
    public String firstName;
    public String phoneNumber;
    public String dob;
    public String email;
    public String registrationToken;
    public String registrationStatusCode;
    public String registrationDate;
    public String registrationConfirmDate;
    public String simSubscriberId;
    public String simSerialNumber;
    public String operatorDeviceSim;
    public String registrationTokenExpiryDate;
    public String pwd;
    public String deviceId;
    public RefRegistrationStatu refRegistrationStatu;

    public Registration() {
    }

    public Registration(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdRegistration")) {
            Object obj = soapObject.getProperty("IdRegistration");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idRegistration = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idRegistration = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastName")) {
            Object obj = soapObject.getProperty("LastName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastName = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastName = (String) obj;
            }
        }
        if (soapObject.hasProperty("FirstName")) {
            Object obj = soapObject.getProperty("FirstName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                firstName = j.toString();
            } else if (obj != null && obj instanceof String) {
                firstName = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneNumber")) {
            Object obj = soapObject.getProperty("PhoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                phoneNumber = j.toString();
            } else if (obj != null && obj instanceof String) {
                phoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("Dob")) {
            Object obj = soapObject.getProperty("Dob");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                dob = j.toString();
            } else if (obj != null && obj instanceof String) {
                dob = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email")) {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                email = j.toString();
            } else if (obj != null && obj instanceof String) {
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationToken")) {
            Object obj = soapObject.getProperty("RegistrationToken");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                registrationToken = j.toString();
            } else if (obj != null && obj instanceof String) {
                registrationToken = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationStatusCode")) {
            Object obj = soapObject.getProperty("RegistrationStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                registrationStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                registrationStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationDate")) {
            Object obj = soapObject.getProperty("RegistrationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                registrationDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                registrationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationConfirmDate")) {
            Object obj = soapObject.getProperty("RegistrationConfirmDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                registrationConfirmDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                registrationConfirmDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimSubscriberId")) {
            Object obj = soapObject.getProperty("SimSubscriberId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simSubscriberId = j.toString();
            } else if (obj != null && obj instanceof String) {
                simSubscriberId = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimSerialNumber")) {
            Object obj = soapObject.getProperty("SimSerialNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simSerialNumber = j.toString();
            } else if (obj != null && obj instanceof String) {
                simSerialNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("OperatorDeviceSim")) {
            Object obj = soapObject.getProperty("OperatorDeviceSim");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                operatorDeviceSim = j.toString();
            } else if (obj != null && obj instanceof String) {
                operatorDeviceSim = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationTokenExpiryDate")) {
            Object obj = soapObject.getProperty("RegistrationTokenExpiryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                registrationTokenExpiryDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                registrationTokenExpiryDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("Pwd")) {
            Object obj = soapObject.getProperty("Pwd");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pwd = j.toString();
            } else if (obj != null && obj instanceof String) {
                pwd = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeviceId")) {
            Object obj = soapObject.getProperty("DeviceId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deviceId = j.toString();
            } else if (obj != null && obj instanceof String) {
                deviceId = (String) obj;
            }
        }
        if (soapObject.hasProperty("RefRegistrationStatu")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefRegistrationStatu");
            refRegistrationStatu = new RefRegistrationStatu(j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idRegistration;
            case 1:
                return lastName;
            case 2:
                return firstName;
            case 3:
                return phoneNumber;
            case 4:
                return dob;
            case 5:
                return email;
            case 6:
                return registrationToken;
            case 7:
                return registrationStatusCode;
            case 8:
                return registrationDate;
            case 9:
                return registrationConfirmDate;
            case 10:
                return simSubscriberId;
            case 11:
                return simSerialNumber;
            case 12:
                return operatorDeviceSim;
            case 13:
                return registrationTokenExpiryDate;
            case 14:
                return pwd;
            case 15:
                return deviceId;
            case 16:
                return refRegistrationStatu;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 17;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdRegistration";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FirstName";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PhoneNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Dob";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationToken";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationStatusCode";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationDate";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationConfirmDate";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimSubscriberId";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimSerialNumber";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperatorDeviceSim";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationTokenExpiryDate";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Pwd";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeviceId";
                break;
            case 16:
                info.type = RefRegistrationStatu.class;
                info.name = "RefRegistrationStatu";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
