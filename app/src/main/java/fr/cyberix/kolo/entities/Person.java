package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class Person implements KvmSerializable {

    public int idCustomer;
    public String genderCode;
    public String maritalStatusCode;
    public String firstname;
    public String middlename;
    public String lastname;
    public String dateOfBirth;
    public String dateCreated;
    public String countryCode;
    public Country country;
    public Customer customer;
    public RefGender refGender;
    public RefMaritalStatu refMaritalStatu;
    public PersonRelationship personRelationship;

    public Person() {
    }

    public Person(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdCustomer")) {
            Object obj = soapObject.getProperty("IdCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GenderCode")) {
            Object obj = soapObject.getProperty("GenderCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                genderCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                genderCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("MaritalStatusCode")) {
            Object obj = soapObject.getProperty("MaritalStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                maritalStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                maritalStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Firstname")) {
            Object obj = soapObject.getProperty("Firstname");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                firstname = j.toString();
            } else if (obj != null && obj instanceof String) {
                firstname = (String) obj;
            }
        }
        if (soapObject.hasProperty("Middlename")) {
            Object obj = soapObject.getProperty("Middlename");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                middlename = j.toString();
            } else if (obj != null && obj instanceof String) {
                middlename = (String) obj;
            }
        }
        if (soapObject.hasProperty("Lastname")) {
            Object obj = soapObject.getProperty("Lastname");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastname = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastname = (String) obj;
            }
        }
        if (soapObject.hasProperty("DateOfBirth")) {
            Object obj = soapObject.getProperty("DateOfBirth");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                dateOfBirth = j.toString();
            } else if (obj != null && obj instanceof String) {
                dateOfBirth = (String) obj;
            }
        }
        if (soapObject.hasProperty("DateCreated")) {
            Object obj = soapObject.getProperty("DateCreated");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                dateCreated = j.toString();
            } else if (obj != null && obj instanceof String) {
                dateCreated = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountryCode")) {
            Object obj = soapObject.getProperty("CountryCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                countryCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                countryCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Country")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Country");
            country = new Country(j);
            
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);
            
        }
        if (soapObject.hasProperty("RefGender")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefGender");
            refGender = new RefGender(j);
            
        }
        if (soapObject.hasProperty("RefMaritalStatu")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefMaritalStatu");
            refMaritalStatu = new RefMaritalStatu(j);
            
        }
        if (soapObject.hasProperty("PersonRelationship")) {
            SoapObject j = (SoapObject) soapObject.getProperty("PersonRelationship");
            personRelationship = new PersonRelationship(j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idCustomer;
            case 1:
                return genderCode;
            case 2:
                return maritalStatusCode;
            case 3:
                return firstname;
            case 4:
                return middlename;
            case 5:
                return lastname;
            case 6:
                return dateOfBirth;
            case 7:
                return dateCreated;
            case 8:
                return countryCode;
            case 9:
                return country;
            case 10:
                return customer;
            case 11:
                return refGender;
            case 12:
                return refMaritalStatu;
            case 13:
                return personRelationship;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 14;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomer";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GenderCode";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MaritalStatusCode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Firstname";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Middlename";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Lastname";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DateOfBirth";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DateCreated";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CountryCode";
                break;
            case 9:
                info.type = Country.class;
                info.name = "Country";
                break;
            case 10:
                info.type = Customer.class;
                info.name = "Customer";
                break;
            case 11:
                info.type = RefGender.class;
                info.name = "RefGender";
                break;
            case 12:
                info.type = RefMaritalStatu.class;
                info.name = "RefMaritalStatu";
                break;
            case 13:
                info.type = PersonRelationship.class;
                info.name = "PersonRelationship";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
