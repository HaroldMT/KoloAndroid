package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class City implements KvmSerializable {

    public int idCity;
    public String cityName;
    public String countryCode;
    public int idDistrict;
    public Country country;
    public District district;

    public City() {
    }

    public City(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdCity")) {
            Object obj = soapObject.getProperty("IdCity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCity = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCity = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CityName")) {
            Object obj = soapObject.getProperty("CityName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                cityName = j.toString();
            } else if (obj != null && obj instanceof String) {
                cityName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountryCode")) {
            Object obj = soapObject.getProperty("CountryCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                countryCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                countryCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("IdDistrict")) {
            Object obj = soapObject.getProperty("IdDistrict");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idDistrict = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idDistrict = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Country")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Country");
            country = new Country(j);

        }
        if (soapObject.hasProperty("District")) {
            SoapObject j = (SoapObject) soapObject.getProperty("District");
            district = new District(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idCity;
            case 1:
                return cityName;
            case 2:
                return countryCode;
            case 3:
                return idDistrict;
            case 4:
                return country;
            case 5:
                return district;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCity";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CityName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CountryCode";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdDistrict";
                break;
            case 4:
                info.type = Country.class;
                info.name = "Country";
                break;
            case 5:
                info.type = District.class;
                info.name = "District";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
