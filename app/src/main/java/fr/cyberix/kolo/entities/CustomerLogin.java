package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class CustomerLogin implements KvmSerializable {

    public int idCustomer;
    public String number;
    public boolean numberVerified;
    public String emailAddress;
    public boolean emailAddressVerified;
    public String pwdSalt;
    public String pwd;
    public String recoveryToken;
    public String recoveryTokenExpiryDate;
    public String loginStatusCode;
    public Customer customer;
    public RefLoginStatu refLoginStatu;

    public CustomerLogin() {
    }

    public CustomerLogin(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdCustomer")) {
            Object obj = soapObject.getProperty("IdCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Number")) {
            Object obj = soapObject.getProperty("Number");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                number = j.toString();
            } else if (obj != null && obj instanceof String) {
                number = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumberVerified")) {
            Object obj = soapObject.getProperty("NumberVerified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                numberVerified = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                numberVerified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EmailAddress")) {
            Object obj = soapObject.getProperty("EmailAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                emailAddress = j.toString();
            } else if (obj != null && obj instanceof String) {
                emailAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("EmailAddressVerified")) {
            Object obj = soapObject.getProperty("EmailAddressVerified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                emailAddressVerified = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                emailAddressVerified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PwdSalt")) {
            Object obj = soapObject.getProperty("PwdSalt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pwdSalt = j.toString();
            } else if (obj != null && obj instanceof String) {
                pwdSalt = (String) obj;
            }
        }
        if (soapObject.hasProperty("Pwd")) {
            Object obj = soapObject.getProperty("Pwd");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pwd = j.toString();
            } else if (obj != null && obj instanceof String) {
                pwd = (String) obj;
            }
        }
        if (soapObject.hasProperty("RecoveryToken")) {
            Object obj = soapObject.getProperty("RecoveryToken");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                recoveryToken = j.toString();
            } else if (obj != null && obj instanceof String) {
                recoveryToken = (String) obj;
            }
        }
        if (soapObject.hasProperty("RecoveryTokenExpiryDate")) {
            Object obj = soapObject.getProperty("RecoveryTokenExpiryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                recoveryTokenExpiryDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                recoveryTokenExpiryDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("LoginStatusCode")) {
            Object obj = soapObject.getProperty("LoginStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                loginStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                loginStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);
            
        }
        if (soapObject.hasProperty("RefLoginStatu")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefLoginStatu");
            refLoginStatu = new RefLoginStatu(j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idCustomer;
            case 1:
                return number;
            case 2:
                return numberVerified;
            case 3:
                return emailAddress;
            case 4:
                return emailAddressVerified;
            case 5:
                return pwdSalt;
            case 6:
                return pwd;
            case 7:
                return recoveryToken;
            case 8:
                return recoveryTokenExpiryDate;
            case 9:
                return loginStatusCode;
            case 10:
                return customer;
            case 11:
                return refLoginStatu;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 12;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomer";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Number";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "NumberVerified";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EmailAddress";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "EmailAddressVerified";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PwdSalt";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Pwd";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RecoveryToken";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RecoveryTokenExpiryDate";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LoginStatusCode";
                break;
            case 10:
                info.type = Customer.class;
                info.name = "Customer";
                break;
            case 11:
                info.type = RefLoginStatu.class;
                info.name = "RefLoginStatu";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
