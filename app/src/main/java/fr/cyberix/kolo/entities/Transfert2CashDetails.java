package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class Transfert2CashDetails implements KvmSerializable {

    public int idTransfert2CashDetails;
    public int idCustomerAccount;
    public String firstname;
    public String middlename;
    public String lastname;
    public String reference;
    public Customer customer;

    public Transfert2CashDetails() {
    }

    public Transfert2CashDetails(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdTransfert2CashDetails")) {
            Object obj = soapObject.getProperty("IdTransfert2CashDetails");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idTransfert2CashDetails = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idTransfert2CashDetails = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCustomerAccount")) {
            Object obj = soapObject.getProperty("IdCustomerAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomerAccount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomerAccount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Firstname")) {
            Object obj = soapObject.getProperty("Firstname");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                firstname = j.toString();
            } else if (obj != null && obj instanceof String) {
                firstname = (String) obj;
            }
        }
        if (soapObject.hasProperty("Middlename")) {
            Object obj = soapObject.getProperty("Middlename");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                middlename = j.toString();
            } else if (obj != null && obj instanceof String) {
                middlename = (String) obj;
            }
        }
        if (soapObject.hasProperty("Lastname")) {
            Object obj = soapObject.getProperty("Lastname");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastname = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastname = (String) obj;
            }
        }
        if (soapObject.hasProperty("Reference")) {
            Object obj = soapObject.getProperty("Reference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reference = j.toString();
            } else if (obj != null && obj instanceof String) {
                reference = (String) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idTransfert2CashDetails;
            case 1:
                return idCustomerAccount;
            case 2:
                return firstname;
            case 3:
                return middlename;
            case 4:
                return lastname;
            case 5:
                return reference;
            case 6:
                return customer;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 7;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdTransfert2CashDetails";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomerAccount";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Firstname";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Middlename";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Lastname";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Reference";
                break;
            case 6:
                info.type = Customer.class;
                info.name = "Customer";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
