package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class AccountOperation implements KvmSerializable {

    public int idAccountOperation;
    public int idPartnerAccount;
    public String operationStatusCode;
    public int idPatnerHistory;
    public String operationTypeCode;
    public int amount;
    public RefOperationStatu refOperationStatu;
    public Partner partner;
    public RefOperationType refOperationType;
    public PartnerBalanceHistory partnerBalanceHistory;
    public AccountOperationRequest accountOperationRequest;

    public AccountOperation() {
    }

    public AccountOperation(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdAccountOperation")) {
            Object obj = soapObject.getProperty("IdAccountOperation");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idAccountOperation = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idAccountOperation = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdPartnerAccount")) {
            Object obj = soapObject.getProperty("IdPartnerAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idPartnerAccount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idPartnerAccount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OperationStatusCode")) {
            Object obj = soapObject.getProperty("OperationStatusCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                operationStatusCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                operationStatusCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("IdPatnerHistory")) {
            Object obj = soapObject.getProperty("IdPatnerHistory");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idPatnerHistory = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idPatnerHistory = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OperationTypeCode")) {
            Object obj = soapObject.getProperty("OperationTypeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                operationTypeCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                operationTypeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("RefOperationStatu")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefOperationStatu");
            refOperationStatu = new RefOperationStatu(j);

        }
        if (soapObject.hasProperty("Partner")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Partner");
            partner = new Partner(j);

        }
        if (soapObject.hasProperty("RefOperationType")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefOperationType");
            refOperationType = new RefOperationType(j);

        }
        if (soapObject.hasProperty("PartnerBalanceHistory")) {
            SoapObject j = (SoapObject) soapObject.getProperty("PartnerBalanceHistory");
            partnerBalanceHistory = new PartnerBalanceHistory(j);

        }
        if (soapObject.hasProperty("AccountOperationRequest")) {
            SoapObject j = (SoapObject) soapObject.getProperty("AccountOperationRequest");
            accountOperationRequest = new AccountOperationRequest(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idAccountOperation;
            case 1:
                return idPartnerAccount;
            case 2:
                return operationStatusCode;
            case 3:
                return idPatnerHistory;
            case 4:
                return operationTypeCode;
            case 5:
                return amount;
            case 6:
                return refOperationStatu;
            case 7:
                return partner;
            case 8:
                return refOperationType;
            case 9:
                return partnerBalanceHistory;
            case 10:
                return accountOperationRequest;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 11;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdAccountOperation";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdPartnerAccount";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationStatusCode";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdPatnerHistory";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationTypeCode";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Amount";
                break;
            case 6:
                info.type = RefOperationStatu.class;
                info.name = "RefOperationStatu";
                break;
            case 7:
                info.type = Partner.class;
                info.name = "Partner";
                break;
            case 8:
                info.type = RefOperationType.class;
                info.name = "RefOperationType";
                break;
            case 9:
                info.type = PartnerBalanceHistory.class;
                info.name = "PartnerBalanceHistory";
                break;
            case 10:
                info.type = AccountOperationRequest.class;
                info.name = "AccountOperationRequest";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
