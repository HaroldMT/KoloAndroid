package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/1/2018 1:24:28 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class CustomerBalanceHistory implements KvmSerializable {

    public int idCustomerHistory;
    public int idCustomerAccount;
    public String operationTypeCode;
    public String historyDate;
    public int oldBalance;
    public int newBalance;
    public int amount;
    public Customer customer;
    public RefOperationType refOperationType;

    public CustomerBalanceHistory() {
    }

    public CustomerBalanceHistory(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdCustomerHistory")) {
            Object obj = soapObject.getProperty("IdCustomerHistory");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomerHistory = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomerHistory = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCustomerAccount")) {
            Object obj = soapObject.getProperty("IdCustomerAccount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomerAccount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomerAccount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OperationTypeCode")) {
            Object obj = soapObject.getProperty("OperationTypeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                operationTypeCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                operationTypeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("HistoryDate")) {
            Object obj = soapObject.getProperty("HistoryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                historyDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                historyDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("OldBalance")) {
            Object obj = soapObject.getProperty("OldBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                oldBalance = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                oldBalance = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NewBalance")) {
            Object obj = soapObject.getProperty("NewBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                newBalance = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                newBalance = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
        if (soapObject.hasProperty("RefOperationType")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefOperationType");
            refOperationType = new RefOperationType(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idCustomerHistory;
            case 1:
                return idCustomerAccount;
            case 2:
                return operationTypeCode;
            case 3:
                return historyDate;
            case 4:
                return oldBalance;
            case 5:
                return newBalance;
            case 6:
                return amount;
            case 7:
                return customer;
            case 8:
                return refOperationType;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 9;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomerHistory";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomerAccount";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OperationTypeCode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "HistoryDate";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OldBalance";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NewBalance";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Amount";
                break;
            case 7:
                info.type = Customer.class;
                info.name = "Customer";
                break;
            case 8:
                info.type = RefOperationType.class;
                info.name = "RefOperationType";
                break;
        }
    }

    //    @Override
    public String getInnerText() {
        return null;
    }

    //    @Override
    public void setInnerText(String s) {
    }

}
