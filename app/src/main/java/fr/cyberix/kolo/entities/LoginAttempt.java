package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/23/2018 7:21:37 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class LoginAttempt implements KvmSerializable {

    public int idLoginAttempt;
    public int idCustomer;
    public String loginTime;
    public String resultCode;
    public String deviceId;
    public String simOperator;
    public String simSerialNumber;
    public String subscriberId;
    public String pwd;
    public String number;
    public double latitude;
    public double longitude;
    public double accuracy;
    public CustomerLogin customerLogin;
    public RefResult refResult;

    public LoginAttempt() {
    }

    public LoginAttempt(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdLoginAttempt")) {
            Object obj = soapObject.getProperty("IdLoginAttempt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idLoginAttempt = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idLoginAttempt = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IdCustomer")) {
            Object obj = soapObject.getProperty("IdCustomer");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idCustomer = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idCustomer = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LoginTime")) {
            Object obj = soapObject.getProperty("LoginTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                loginTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                loginTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ResultCode")) {
            Object obj = soapObject.getProperty("ResultCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                resultCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                resultCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeviceId")) {
            Object obj = soapObject.getProperty("DeviceId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deviceId = j.toString();
            } else if (obj != null && obj instanceof String) {
                deviceId = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimOperator")) {
            Object obj = soapObject.getProperty("SimOperator");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simOperator = j.toString();
            } else if (obj != null && obj instanceof String) {
                simOperator = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimSerialNumber")) {
            Object obj = soapObject.getProperty("SimSerialNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simSerialNumber = j.toString();
            } else if (obj != null && obj instanceof String) {
                simSerialNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("SubscriberId")) {
            Object obj = soapObject.getProperty("SubscriberId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                subscriberId = j.toString();
            } else if (obj != null && obj instanceof String) {
                subscriberId = (String) obj;
            }
        }
        if (soapObject.hasProperty("Pwd")) {
            Object obj = soapObject.getProperty("Pwd");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pwd = j.toString();
            } else if (obj != null && obj instanceof String) {
                pwd = (String) obj;
            }
        }
        if (soapObject.hasProperty("Number")) {
            Object obj = soapObject.getProperty("Number");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                number = j.toString();
            } else if (obj != null && obj instanceof String) {
                number = (String) obj;
            }
        }
        if (soapObject.hasProperty("Latitude")) {
            Object obj = soapObject.getProperty("Latitude");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                latitude = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                latitude = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Longitude")) {
            Object obj = soapObject.getProperty("Longitude");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                longitude = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                longitude = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Accuracy")) {
            Object obj = soapObject.getProperty("Accuracy");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                accuracy = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                accuracy = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CustomerLogin")) {
            SoapObject j = (SoapObject) soapObject.getProperty("CustomerLogin");
            customerLogin = new CustomerLogin(j);

        }
        if (soapObject.hasProperty("RefResult")) {
            SoapObject j = (SoapObject) soapObject.getProperty("RefResult");
            refResult = new RefResult(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idLoginAttempt;
            case 1:
                return idCustomer;
            case 2:
                return loginTime;
            case 3:
                return resultCode;
            case 4:
                return deviceId;
            case 5:
                return simOperator;
            case 6:
                return simSerialNumber;
            case 7:
                return subscriberId;
            case 8:
                return pwd;
            case 9:
                return number;
            case 10:
                return latitude;
            case 11:
                return longitude;
            case 12:
                return accuracy;
            case 13:
                return customerLogin;
            case 14:
                return refResult;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 15;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdLoginAttempt";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdCustomer";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LoginTime";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ResultCode";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeviceId";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimOperator";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimSerialNumber";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SubscriberId";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Pwd";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Number";
                break;
            case 10:
                info.type = Double.class;
                info.name = "Latitude";
                break;
            case 11:
                info.type = Double.class;
                info.name = "Longitude";
                break;
            case 12:
                info.type = Double.class;
                info.name = "Accuracy";
                break;
            case 13:
                info.type = CustomerLogin.class;
                info.name = "CustomerLogin";
                break;
            case 14:
                info.type = RefResult.class;
                info.name = "RefResult";
                break;
        }
    }

    public String getInnerText() {
        return null;
    }

    public void setInnerText(String s) {
    }

}
