package fr.cyberix.kolo.entities;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/23/2018 7:21:37 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class MobileDevice implements KvmSerializable {

    public int idMobileDevice;
    public String deviceId;
    public String lineNumber;
    public String networkCountryIso;
    public String networkOperator;
    public String networkOperatorName;
    public String networkType;
    public String phoneType;
    public String simCountryIso;
    public String simOperator;
    public String simOperatorName;
    public String simSerialNumber;
    public String simState;
    public String subscriberId;
    public Customer customer;

    public MobileDevice() {
    }

    public MobileDevice(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IdMobileDevice")) {
            Object obj = soapObject.getProperty("IdMobileDevice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                idMobileDevice = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                idMobileDevice = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeviceId")) {
            Object obj = soapObject.getProperty("DeviceId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deviceId = j.toString();
            } else if (obj != null && obj instanceof String) {
                deviceId = (String) obj;
            }
        }
        if (soapObject.hasProperty("LineNumber")) {
            Object obj = soapObject.getProperty("LineNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lineNumber = j.toString();
            } else if (obj != null && obj instanceof String) {
                lineNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("NetworkCountryIso")) {
            Object obj = soapObject.getProperty("NetworkCountryIso");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                networkCountryIso = j.toString();
            } else if (obj != null && obj instanceof String) {
                networkCountryIso = (String) obj;
            }
        }
        if (soapObject.hasProperty("NetworkOperator")) {
            Object obj = soapObject.getProperty("NetworkOperator");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                networkOperator = j.toString();
            } else if (obj != null && obj instanceof String) {
                networkOperator = (String) obj;
            }
        }
        if (soapObject.hasProperty("NetworkOperatorName")) {
            Object obj = soapObject.getProperty("NetworkOperatorName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                networkOperatorName = j.toString();
            } else if (obj != null && obj instanceof String) {
                networkOperatorName = (String) obj;
            }
        }
        if (soapObject.hasProperty("NetworkType")) {
            Object obj = soapObject.getProperty("NetworkType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                networkType = j.toString();
            } else if (obj != null && obj instanceof String) {
                networkType = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneType")) {
            Object obj = soapObject.getProperty("PhoneType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                phoneType = j.toString();
            } else if (obj != null && obj instanceof String) {
                phoneType = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimCountryIso")) {
            Object obj = soapObject.getProperty("SimCountryIso");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simCountryIso = j.toString();
            } else if (obj != null && obj instanceof String) {
                simCountryIso = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimOperator")) {
            Object obj = soapObject.getProperty("SimOperator");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simOperator = j.toString();
            } else if (obj != null && obj instanceof String) {
                simOperator = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimOperatorName")) {
            Object obj = soapObject.getProperty("SimOperatorName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simOperatorName = j.toString();
            } else if (obj != null && obj instanceof String) {
                simOperatorName = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimSerialNumber")) {
            Object obj = soapObject.getProperty("SimSerialNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simSerialNumber = j.toString();
            } else if (obj != null && obj instanceof String) {
                simSerialNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("SimState")) {
            Object obj = soapObject.getProperty("SimState");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                simState = j.toString();
            } else if (obj != null && obj instanceof String) {
                simState = (String) obj;
            }
        }
        if (soapObject.hasProperty("SubscriberId")) {
            Object obj = soapObject.getProperty("SubscriberId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                subscriberId = j.toString();
            } else if (obj != null && obj instanceof String) {
                subscriberId = (String) obj;
            }
        }
        if (soapObject.hasProperty("Customer")) {
            SoapObject j = (SoapObject) soapObject.getProperty("Customer");
            customer = new Customer(j);

        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return idMobileDevice;
            case 1:
                return deviceId;
            case 2:
                return lineNumber;
            case 3:
                return networkCountryIso;
            case 4:
                return networkOperator;
            case 5:
                return networkOperatorName;
            case 6:
                return networkType;
            case 7:
                return phoneType;
            case 8:
                return simCountryIso;
            case 9:
                return simOperator;
            case 10:
                return simOperatorName;
            case 11:
                return simSerialNumber;
            case 12:
                return simState;
            case 13:
                return subscriberId;
            case 14:
                return customer;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 15;
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "IdMobileDevice";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeviceId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LineNumber";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NetworkCountryIso";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NetworkOperator";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NetworkOperatorName";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NetworkType";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PhoneType";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimCountryIso";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimOperator";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimOperatorName";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimSerialNumber";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SimState";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SubscriberId";
                break;
            case 14:
                info.type = Customer.class;
                info.name = "Customer";
                break;
        }
    }

    public String getInnerText() {
        return null;
    }

    public void setInnerText(String s) {
    }

}
