package fr.cyberix.kolo.services;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 6/2/2018 3:40:35 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import android.os.AsyncTask;

import org.ksoap2.HeaderProperty;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import java.util.List;

import fr.cyberix.kolo.ksoap2.IWsdl2CodeEvents;
import fr.cyberix.kolo.ksoap2.WS_Enums;
import fr.cyberix.kolo.model.entities.Transfert2Cash;
import fr.cyberix.kolo.model.entities.Transfert2CashDetails;
import fr.cyberix.kolo.model.entities.TransfertP2p;

public class KolOSphere {

    public String NAMESPACE = "http://kolo.cyberix.fr/";
    public String url = "";
    public int timeOut = 180;
    public IWsdl2CodeEvents eventHandler;
    public WS_Enums.SoapProtocolVersion soapVersion;

    public KolOSphere() {
    }

    public KolOSphere(IWsdl2CodeEvents eventHandler) {
        this.eventHandler = eventHandler;
    }

    public KolOSphere(IWsdl2CodeEvents eventHandler, String url) {
        this.eventHandler = eventHandler;
        this.url = url;
    }

    public KolOSphere(IWsdl2CodeEvents eventHandler, String url, int timeOutInSeconds) {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }

    public void setTimeOut(int seconds) {
        this.timeOut = seconds * 1000;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public void DoTransfertA2AAsync(String jsonTransfertP2p) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        DoTransfertA2AAsync(jsonTransfertP2p, null);
    }

    public void DoTransfertA2AAsync(final String jsonTransfertP2p, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, TransfertP2p>() {
            @Override
            protected TransfertP2p doInBackground(Void... params) {
                return DoTransfertA2A(jsonTransfertP2p, headers);
            }

            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }


            @Override
            protected void onPostExecute(TransfertP2p result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("DoTransfertA2A", result);
                }
            }
        }.execute();
    }

    public TransfertP2p DoTransfertA2A(String jsonTransfertP2p, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "DoTransfertA2A");
        soapReq.addProperty("jsonTransfertP2p", jsonTransfertP2p);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertA2A", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertA2A", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    TransfertP2p resultVariable = new TransfertP2p(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public TransfertP2p DoTransfertA2A(String jsonTransfertP2p) {
        return DoTransfertA2A(jsonTransfertP2p, null);
    }

    public void DoTransfertA2CAsync(String jsonTransfert2c) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        DoTransfertA2CAsync(jsonTransfert2c, null);
    }

    public void DoTransfertA2CAsync(final String jsonTransfert2c, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, Transfert2Cash>() {
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }

            @Override
            protected Transfert2Cash doInBackground(Void... params) {
                return DoTransfertA2C(jsonTransfert2c, headers);
            }

            @Override
            protected void onPostExecute(Transfert2Cash result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("DoTransfertA2C", result);
                }
            }
        }.execute();
    }

    public Transfert2Cash DoTransfertA2C(String jsonTransfert2c, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "DoTransfertA2C");
        soapReq.addProperty("jsonTransfert2c", jsonTransfert2c);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertA2C", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertA2C", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    Transfert2Cash resultVariable = new Transfert2Cash(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public Transfert2Cash DoTransfertA2C(String jsonTransfert2c) {
        return DoTransfertA2C(jsonTransfert2c, null);
    }

    public void DoTransfertC2AAsync(String jsonTransfert2c) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        DoTransfertC2AAsync(jsonTransfert2c, null);
    }

    public void DoTransfertC2AAsync(final String jsonTransfert2c, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, Transfert2Cash>() {
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }

            @Override
            protected Transfert2Cash doInBackground(Void... params) {
                return DoTransfertC2A(jsonTransfert2c, headers);
            }

            @Override
            protected void onPostExecute(Transfert2Cash result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("DoTransfertC2A", result);
                }
            }
        }.execute();
    }

    public Transfert2Cash DoTransfertC2A(String jsonTransfert2c, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "DoTransfertC2A");
        soapReq.addProperty("jsonTransfert2c", jsonTransfert2c);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertC2A", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertC2A", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    Transfert2Cash resultVariable = new Transfert2Cash(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public Transfert2Cash DoTransfertC2A(String jsonTransfert2c) {
        return DoTransfertC2A(jsonTransfert2c, null);
    }

    public void DoTransfertC2CAsync(String jsonTransfert2c) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        DoTransfertC2CAsync(jsonTransfert2c, null);
    }

    public void DoTransfertC2CAsync(final String jsonTransfert2c, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, Transfert2Cash>() {
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }

            @Override
            protected Transfert2Cash doInBackground(Void... params) {
                return DoTransfertC2C(jsonTransfert2c, headers);
            }

            @Override
            protected void onPostExecute(Transfert2Cash result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("DoTransfertC2C", result);
                }
            }
        }.execute();
    }

    public Transfert2Cash DoTransfertC2C(String jsonTransfert2c, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "DoTransfertC2C");
        soapReq.addProperty("jsonTransfert2c", jsonTransfert2c);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertC2C", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/DoTransfertC2C", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    Transfert2Cash resultVariable = new Transfert2Cash(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public Transfert2Cash DoTransfertC2C(String jsonTransfert2c) {
        return DoTransfertC2C(jsonTransfert2c, null);
    }

    public void GetTransfertP2pAsync(int idCustomer) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GetTransfertP2pAsync(idCustomer, null);
    }

    public void GetTransfertP2pAsync(final int idCustomer, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, TransfertP2p>() {
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }

            @Override
            protected TransfertP2p doInBackground(Void... params) {
                return GetTransfertP2p(idCustomer, headers);
            }

            @Override
            protected void onPostExecute(TransfertP2p result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("GetTransfertP2p", result);
                }
            }
        }.execute();
    }

    public TransfertP2p GetTransfertP2p(int idCustomer, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "GetTransfertP2p");
        soapReq.addProperty("idCustomer", idCustomer);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/GetTransfertP2p", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/GetTransfertP2p", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    TransfertP2p resultVariable = new TransfertP2p(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public TransfertP2p GetTransfertP2p(int idCustomer) {
        return GetTransfertP2p(idCustomer, null);
    }

    public void GetTransfert2CashDetailsAsync(int idTransfert2CashDetails) throws Exception {
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        GetTransfert2CashDetailsAsync(idTransfert2CashDetails, null);
    }

    public void GetTransfert2CashDetailsAsync(final int idTransfert2CashDetails, final List<HeaderProperty> headers) {

        new AsyncTask<Void, Void, Transfert2CashDetails>() {
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            }

            @Override
            protected Transfert2CashDetails doInBackground(Void... params) {
                return GetTransfert2CashDetails(idTransfert2CashDetails, headers);
            }

            @Override
            protected void onPostExecute(Transfert2CashDetails result) {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null) {
                    eventHandler.Wsdl2CodeFinished("GetTransfert2CashDetails", result);
                }
            }
        }.execute();
    }

    public Transfert2CashDetails GetTransfert2CashDetails(int idTransfert2CashDetails, List<HeaderProperty> headers) {
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://kolo.cyberix.fr/", "GetTransfert2CashDetails");
        soapReq.addProperty("idTransfert2CashDetails", idTransfert2CashDetails);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url, timeOut);
        try {
            if (headers != null) {
                httpTransport.call("http://kolo.cyberix.fr/GetTransfert2CashDetails", soapEnvelope, headers);
            } else {
                httpTransport.call("http://kolo.cyberix.fr/GetTransfert2CashDetails", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault) {
                SoapFault fault = (SoapFault) retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            } else {
                SoapObject result = (SoapObject) retObj;
                if (result.getPropertyCount() > 0) {
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject) obj;
                    Transfert2CashDetails resultVariable = new Transfert2CashDetails(j);
                    return resultVariable;

                }
            }
        } catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }

    public Transfert2CashDetails GetTransfert2CashDetails(int idTransfert2CashDetails) {
        return GetTransfert2CashDetails(idTransfert2CashDetails, null);
    }

}
